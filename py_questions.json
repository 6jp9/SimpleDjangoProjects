[{"model": "testapp.py_question", "pk": 1, "fields": {"question_text": "What is the correct file extension for Python files?", "option_a": ".pyth", "option_b": ".pt", "option_c": ".py", "option_d": ".pyt", "correct_answer": "C", "type": "python", "level": "beginner"}}, {"model": "testapp.py_question", "pk": 2, "fields": {"question_text": "What is the output of print(type('Hello'))?", "option_a": "<class 'int'>", "option_b": "<class 'str'>", "option_c": "<class 'list'>", "option_d": "<class 'bool'>", "correct_answer": "B", "type": "python", "level": "beginner"}}, {"model": "testapp.py_question", "pk": 3, "fields": {"question_text": "Which of the following is used to comment a single line in Python?", "option_a": "/* comment */", "option_b": "--comment", "option_c": "// comment", "option_d": "# comment", "correct_answer": "D", "type": "python", "level": "beginner"}}, {"model": "testapp.py_question", "pk": 4, "fields": {"question_text": "Which data type is immutable in Python?", "option_a": "List", "option_b": "Dictionary", "option_c": "Set", "option_d": "Tuple", "correct_answer": "D", "type": "python", "level": "beginner"}}, {"model": "testapp.py_question", "pk": 5, "fields": {"question_text": "Which keyword is used for function definition in Python?", "option_a": "func", "option_b": "def", "option_c": "define", "option_d": "function", "correct_answer": "B", "type": "python", "level": "beginner"}}, {"model": "testapp.py_question", "pk": 6, "fields": {"question_text": "How do you start a block of code in Python?", "option_a": "Using parentheses", "option_b": "Using curly braces", "option_c": "Using a colon and indentation", "option_d": "Using angle brackets", "correct_answer": "C", "type": "python", "level": "beginner"}}, {"model": "testapp.py_question", "pk": 7, "fields": {"question_text": "What will be the output of print(3 + 2 * 2)?", "option_a": "10", "option_b": "7", "option_c": "9", "option_d": "12", "correct_answer": "B", "type": "python", "level": "beginner"}}, {"model": "testapp.py_question", "pk": 8, "fields": {"question_text": "Which of the following is a valid variable name in Python?", "option_a": "2name", "option_b": "@value", "option_c": "first_name", "option_d": "class", "correct_answer": "C", "type": "python", "level": "beginner"}}, {"model": "testapp.py_question", "pk": 9, "fields": {"question_text": "Which method is used to convert a string to lowercase in Python?", "option_a": "lowercase()", "option_b": "tolower()", "option_c": "lower()", "option_d": "toLowerCase()", "correct_answer": "C", "type": "python", "level": "beginner"}}, {"model": "testapp.py_question", "pk": 10, "fields": {"question_text": "What does the len() function do?", "option_a": "Returns the data type", "option_b": "Returns the memory size", "option_c": "Returns the number of elements", "option_d": "Returns variable length", "correct_answer": "C", "type": "python", "level": "beginner"}}, {"model": "testapp.py_question", "pk": 11, "fields": {"question_text": "Which symbol is used for exponentiation in Python?", "option_a": "^", "option_b": "**", "option_c": "exp", "option_d": "^^", "correct_answer": "B", "type": "python", "level": "beginner"}}, {"model": "testapp.py_question", "pk": 12, "fields": {"question_text": "What is the correct way to write a while loop?", "option_a": "while (x > y) {}", "option_b": "while x > y:", "option_c": "loop while x > y", "option_d": "while x > y do:", "correct_answer": "B", "type": "python", "level": "beginner"}}, {"model": "testapp.py_question", "pk": 13, "fields": {"question_text": "What will print(bool('')) return?", "option_a": "True", "option_b": "False", "option_c": "0", "option_d": "Error", "correct_answer": "B", "type": "python", "level": "beginner"}}, {"model": "testapp.py_question", "pk": 14, "fields": {"question_text": "Which of these is used to handle exceptions?", "option_a": "handle/except", "option_b": "try/catch", "option_c": "try/except", "option_d": "check/error", "correct_answer": "C", "type": "python", "level": "beginner"}}, {"model": "testapp.py_question", "pk": 15, "fields": {"question_text": "How do you insert an item at the end of a list lst?", "option_a": "lst.add(item)", "option_b": "lst.insert(item)", "option_c": "lst.append(item)", "option_d": "lst.push(item)", "correct_answer": "C", "type": "python", "level": "beginner"}}, {"model": "testapp.py_question", "pk": 16, "fields": {"question_text": "What is the output of print('Hello' + str(5))?", "option_a": "Hello5", "option_b": "Hello", "option_c": "Error", "option_d": "str(5)", "correct_answer": "A", "type": "python", "level": "beginner"}}, {"model": "testapp.py_question", "pk": 17, "fields": {"question_text": "What data type does the input() function return?", "option_a": "Integer", "option_b": "Float", "option_c": "String", "option_d": "Boolean", "correct_answer": "C", "type": "python", "level": "beginner"}}, {"model": "testapp.py_question", "pk": 18, "fields": {"question_text": "Which of the following is used to create a comment block?", "option_a": "Triple forward slashes", "option_b": "", "option_c": "Triple quotes", "option_d": "Double hashes", "correct_answer": "C", "type": "python", "level": "beginner"}}, {"model": "testapp.py_question", "pk": 19, "fields": {"question_text": "Which function is used to get the maximum value from a list?", "option_a": "high()", "option_b": "max()", "option_c": "top()", "option_d": "maximum()", "correct_answer": "B", "type": "python", "level": "beginner"}}, {"model": "testapp.py_question", "pk": 20, "fields": {"question_text": "What is the output of: print('a' * 3)?", "option_a": "a3", "option_b": "aaa", "option_c": "Error", "option_d": "a a a", "correct_answer": "B", "type": "python", "level": "beginner"}}, {"model": "testapp.py_question", "pk": 21, "fields": {"question_text": "What is the output of the following code?\n\nx = [1, 2, 3]\nprint(x[::-1])", "option_a": "[1, 2, 3]", "option_b": "[3, 2, 1]", "option_c": "[2, 3]", "option_d": "Error", "correct_answer": "B", "type": "python", "level": "intermediate"}}, {"model": "testapp.py_question", "pk": 22, "fields": {"question_text": "Which of the following is a valid way to merge two dictionaries in Python 3.9+?", "option_a": "dict1 + dict2", "option_b": "dict1 | dict2", "option_c": "merge(dict1, dict2)", "option_d": "dict1.append(dict2)", "correct_answer": "B", "type": "python", "level": "intermediate"}}, {"model": "testapp.py_question", "pk": 23, "fields": {"question_text": "What does the enumerate() function return?", "option_a": "Only keys of a dictionary", "option_b": "Index-value pairs of an iterable", "option_c": "Length of iterable", "option_d": "None of the above", "correct_answer": "B", "type": "python", "level": "intermediate"}}, {"model": "testapp.py_question", "pk": 24, "fields": {"question_text": "Which statement is used to define a generator in Python?", "option_a": "yield", "option_b": "generate", "option_c": "return", "option_d": "async", "correct_answer": "A", "type": "python", "level": "intermediate"}}, {"model": "testapp.py_question", "pk": 25, "fields": {"question_text": "What is the output of: print({x: x*x for x in range(3)})", "option_a": "{0: 1, 1: 2, 2: 3}", "option_b": "{1: 1, 2: 4, 3: 9}", "option_c": "{0: 0, 1: 1, 2: 4}", "option_d": "Error", "correct_answer": "C", "type": "python", "level": "intermediate"}}, {"model": "testapp.py_question", "pk": 26, "fields": {"question_text": "What is the result of the following code?\n\nprint([i for i in range(5) if i % 2 == 0])", "option_a": "[1, 3, 5]", "option_b": "[0, 2, 4]", "option_c": "[2, 4]", "option_d": "[0, 1, 2, 3, 4]", "correct_answer": "B", "type": "python", "level": "intermediate"}}, {"model": "testapp.py_question", "pk": 27, "fields": {"question_text": "How can you sort a list of tuples by the second element?", "option_a": "sorted(list)", "option_b": "sorted(list, key=lambda x: x[1])", "option_c": "list.sort()", "option_d": "list.sort(key=2)", "correct_answer": "B", "type": "python", "level": "intermediate"}}, {"model": "testapp.py_question", "pk": 28, "fields": {"question_text": "Which built-in function checks if all items in an iterable are True?", "option_a": "check()", "option_b": "any()", "option_c": "verify()", "option_d": "all()", "correct_answer": "D", "type": "python", "level": "intermediate"}}, {"model": "testapp.py_question", "pk": 29, "fields": {"question_text": "Which of these is not a valid set method?", "option_a": "add()", "option_b": "append()", "option_c": "pop()", "option_d": "remove()", "correct_answer": "B", "type": "python", "level": "intermediate"}}, {"model": "testapp.py_question", "pk": 30, "fields": {"question_text": "What is the output of: print(0.1 + 0.2 == 0.3)?", "option_a": "True", "option_b": "False", "option_c": "None", "option_d": "Error", "correct_answer": "B", "type": "python", "level": "intermediate"}}, {"model": "testapp.py_question", "pk": 31, "fields": {"question_text": "What is the scope of a variable declared inside a list comprehension?", "option_a": "Local to function", "option_b": "Global", "option_c": "Local to comprehension", "option_d": "Class-level", "correct_answer": "C", "type": "python", "level": "intermediate"}}, {"model": "testapp.py_question", "pk": 32, "fields": {"question_text": "Which of the following modules is used to serialize Python objects?", "option_a": "pickle", "option_b": "marshal", "option_c": "json", "option_d": "All of the above", "correct_answer": "D", "type": "python", "level": "intermediate"}}, {"model": "testapp.py_question", "pk": 33, "fields": {"question_text": "What is a key difference between lists and tuples?", "option_a": "Tuples are mutable", "option_b": "Lists are hashable", "option_c": "Tuples are immutable", "option_d": "Lists are immutable", "correct_answer": "C", "type": "python", "level": "intermediate"}}, {"model": "testapp.py_question", "pk": 34, "fields": {"question_text": "What will be the output of: print('abc'.capitalize())?", "option_a": "ABC", "option_b": "abc", "option_c": "Abc", "option_d": "aBc", "correct_answer": "C", "type": "python", "level": "intermediate"}}, {"model": "testapp.py_question", "pk": 35, "fields": {"question_text": "Which of these statements correctly defines a class method?", "option_a": "@classmethod\ndef method(cls):", "option_b": "@staticmethod\ndef method():", "option_c": "def method(self):", "option_d": "@class\ndef method(cls):", "correct_answer": "A", "type": "python", "level": "intermediate"}}, {"model": "testapp.py_question", "pk": 36, "fields": {"question_text": "What does the 'with' statement help with?", "option_a": "Code speed", "option_b": "Garbage collection", "option_c": "Resource management", "option_d": "Memory expansion", "correct_answer": "C", "type": "python", "level": "intermediate"}}, {"model": "testapp.py_question", "pk": 37, "fields": {"question_text": "What is the difference between 'is' and '==' in Python?", "option_a": "No difference", "option_b": "'is' compares value; '==' compares id", "option_c": "'is' compares id; '==' compares value", "option_d": "'==' compares memory; 'is' compares class", "correct_answer": "C", "type": "python", "level": "intermediate"}}, {"model": "testapp.py_question", "pk": 38, "fields": {"question_text": "Which of the following expressions will NOT raise an error?", "option_a": "int('10.5')", "option_b": "float('abc')", "option_c": "str(123)", "option_d": "int('ten')", "correct_answer": "C", "type": "python", "level": "intermediate"}}, {"model": "testapp.py_question", "pk": 39, "fields": {"question_text": "Which Python feature allows defining multiple behaviors in the same function name?", "option_a": "Multithreading", "option_b": "Polymorphism", "option_c": "Inheritance", "option_d": "Encapsulation", "correct_answer": "B", "type": "python", "level": "intermediate"}}, {"model": "testapp.py_question", "pk": 40, "fields": {"question_text": "What will be the output?\n\ndef f(a, b=[]):\n  b.append(a)\n  return b\n\nprint(f(1))\nprint(f(2))", "option_a": "[1], [2]", "option_b": "[1], [1, 2]", "option_c": "[1], [2, 1]", "option_d": "Error", "correct_answer": "B", "type": "python", "level": "intermediate"}}, {"model": "testapp.py_question", "pk": 41, "fields": {"question_text": "Which of the following best describes a Python metaclass?", "option_a": "A class that creates decorators", "option_b": "A class that creates classes", "option_c": "A subclass of object", "option_d": "A function wrapper", "correct_answer": "B", "type": "python", "level": "expert"}}, {"model": "testapp.py_question", "pk": 42, "fields": {"question_text": "What will be the output?\n\ndef func(a, b, /, c, d, *, e, f):\n  return a + b + c + d + e + f\n\nprint(func(1, 2, 3, 4, e=5, f=6))", "option_a": "21", "option_b": "Error", "option_c": "15", "option_d": "TypeError", "correct_answer": "A", "type": "python", "level": "expert"}}, {"model": "testapp.py_question", "pk": 43, "fields": {"question_text": "Which memory management technique does Python use for objects?", "option_a": "Manual memory management", "option_b": "Reference counting with garbage collection", "option_c": "Memory pooling", "option_d": "Stack allocation", "correct_answer": "B", "type": "python", "level": "expert"}}, {"model": "testapp.py_question", "pk": 44, "fields": {"question_text": "Which of the following functions is a coroutine in Python?", "option_a": "A function using `await`", "option_b": "A function using `yield`", "option_c": "A function using `async def`", "option_d": "Both A and C", "correct_answer": "D", "type": "python", "level": "expert"}}, {"model": "testapp.py_question", "pk": 45, "fields": {"question_text": "What is the output of this code?\n\na = (x*x for x in range(3))\nprint(next(a), next(a), next(a))", "option_a": "0 1 2", "option_b": "1 4 9", "option_c": "0 1 4", "option_d": "0 2 4", "correct_answer": "C", "type": "python", "level": "expert"}}, {"model": "testapp.py_question", "pk": 46, "fields": {"question_text": "Which library is used to implement Just-In-Time compilation in Python?", "option_a": "cpython", "option_b": "pypy", "option_c": "jitlib", "option_d": "cython", "correct_answer": "B", "type": "python", "level": "expert"}}, {"model": "testapp.py_question", "pk": 47, "fields": {"question_text": "How does Python's GIL (Global Interpreter Lock) affect multithreading?", "option_a": "It enables true parallelism", "option_b": "It disables multithreading", "option_c": "It serializes execution of Python bytecode", "option_d": "It allows multiprocessing", "correct_answer": "C", "type": "python", "level": "expert"}}, {"model": "testapp.py_question", "pk": 48, "fields": {"question_text": "What is the purpose of the `__slots__` declaration in a Python class?", "option_a": "To enable private members", "option_b": "To reduce memory usage and disallow dynamic attributes", "option_c": "To enforce type checking", "option_d": "To improve method lookup speed", "correct_answer": "B", "type": "python", "level": "expert"}}, {"model": "testapp.py_question", "pk": 49, "fields": {"question_text": "Which of the following tools is used for static code analysis in Python?", "option_a": "pylint", "option_b": "black", "option_c": "pytest", "option_d": "tox", "correct_answer": "A", "type": "python", "level": "expert"}}, {"model": "testapp.py_question", "pk": 50, "fields": {"question_text": "What is the result of the following?\n\nprint([i for i in range(3)] == list(map(lambda x: x, range(3))))", "option_a": "True", "option_b": "False", "option_c": "Error", "option_d": "None", "correct_answer": "A", "type": "python", "level": "expert"}}, {"model": "testapp.py_question", "pk": 51, "fields": {"question_text": "What does the `functools.lru_cache()` decorator do?", "option_a": "Limits recursion depth", "option_b": "Caches function results to optimize performance", "option_c": "Memoizes results using weak references", "option_d": "Clears cache after each call", "correct_answer": "B", "type": "python", "level": "expert"}}, {"model": "testapp.py_question", "pk": 52, "fields": {"question_text": "Which statement about Python descriptors is true?", "option_a": "They are used to create class methods", "option_b": "They control access to attributes via __get__, __set__, __delete__", "option_c": "They override __str__ behavior", "option_d": "They disable __init__", "correct_answer": "B", "type": "python", "level": "expert"}}, {"model": "testapp.py_question", "pk": 53, "fields": {"question_text": "How do you define a custom context manager?", "option_a": "By defining __enter__ and __exit__ methods", "option_b": "By using try/finally", "option_c": "By decorating with @contextlib", "option_d": "By subclassing object", "correct_answer": "A", "type": "python", "level": "expert"}}, {"model": "testapp.py_question", "pk": 54, "fields": {"question_text": "What does monkey patching mean in Python?", "option_a": "Changing variable names", "option_b": "Modifying classes/functions at runtime", "option_c": "Patching security vulnerabilities", "option_d": "Installing third-party libraries", "correct_answer": "B", "type": "python", "level": "expert"}}, {"model": "testapp.py_question", "pk": 55, "fields": {"question_text": "What is the output of this code?\n\nx = [1, 2, 3]\ny = x\nx += [4]\nprint(x, y)", "option_a": "[1, 2, 3, 4] [1, 2, 3, 4]", "option_b": "[1, 2, 3, 4] [1, 2, 3]", "option_c": "Error", "option_d": "None", "correct_answer": "A", "type": "python", "level": "expert"}}, {"model": "testapp.py_question", "pk": 56, "fields": {"question_text": "What does the `weakref` module allow you to do?", "option_a": "Create low-memory data types", "option_b": "Reference objects without preventing their garbage collection", "option_c": "Improve variable lookup", "option_d": "Use weak passwords", "correct_answer": "B", "type": "python", "level": "expert"}}, {"model": "testapp.py_question", "pk": 57, "fields": {"question_text": "Which of the following is true about Python decorators?", "option_a": "They must return None", "option_b": "They are only used with classes", "option_c": "They wrap functions to modify behavior", "option_d": "They are evaluated at runtime after the function call", "correct_answer": "C", "type": "python", "level": "expert"}}, {"model": "testapp.py_question", "pk": 58, "fields": {"question_text": "What does the `inspect` module provide?", "option_a": "Syntax highlighting", "option_b": "Code linting", "option_c": "Access to live object introspection", "option_d": "Unit testing features", "correct_answer": "C", "type": "python", "level": "expert"}}, {"model": "testapp.py_question", "pk": 59, "fields": {"question_text": "Which protocol method allows an object to be used in a for-loop?", "option_a": "__call__", "option_b": "__next__", "option_c": "__iter__", "option_d": "__getitem__", "correct_answer": "C", "type": "python", "level": "expert"}}, {"model": "testapp.py_question", "pk": 60, "fields": {"question_text": "What will this output?\n\ndef add(x, y=[]):\n    y.append(x)\n    return y\n\nprint(add(1))\nprint(add(2))", "option_a": "[1], [2]", "option_b": "[1], [1, 2]", "option_c": "[1], [2, 1]", "option_d": "Error", "correct_answer": "B", "type": "python", "level": "expert"}}, {"model": "testapp.py_question", "pk": 61, "fields": {"question_text": "Which keyword is used to define a class in Java?", "option_a": "function", "option_b": "class", "option_c": "define", "option_d": "struct", "correct_answer": "B", "type": "java", "level": "beginner"}}, {"model": "testapp.py_question", "pk": 62, "fields": {"question_text": "What is the size of an int in Java?", "option_a": "8 bits", "option_b": "16 bits", "option_c": "32 bits", "option_d": "64 bits", "correct_answer": "C", "type": "java", "level": "beginner"}}, {"model": "testapp.py_question", "pk": 63, "fields": {"question_text": "Which method is the entry point of any Java program?", "option_a": "start()", "option_b": "run()", "option_c": "main()", "option_d": "init()", "correct_answer": "C", "type": "java", "level": "beginner"}}, {"model": "testapp.py_question", "pk": 64, "fields": {"question_text": "Which symbol is used to end a statement in Java?", "option_a": ".", "option_b": ";", "option_c": ":", "option_d": ",", "correct_answer": "B", "type": "java", "level": "beginner"}}, {"model": "testapp.py_question", "pk": 65, "fields": {"question_text": "Which keyword is used to inherit a class in Java?", "option_a": "inherits", "option_b": "super", "option_c": "this", "option_d": "extends", "correct_answer": "D", "type": "java", "level": "beginner"}}, {"model": "testapp.py_question", "pk": 66, "fields": {"question_text": "What is the default value of a boolean in Java?", "option_a": "true", "option_b": "false", "option_c": "0", "option_d": "null", "correct_answer": "B", "type": "java", "level": "beginner"}}, {"model": "testapp.py_question", "pk": 67, "fields": {"question_text": "Which of these is not a Java keyword?", "option_a": "static", "option_b": "Boolean", "option_c": "private", "option_d": "try", "correct_answer": "B", "type": "java", "level": "beginner"}}, {"model": "testapp.py_question", "pk": 68, "fields": {"question_text": "What is used to create an object in Java?", "option_a": "alloc", "option_b": "instantiate", "option_c": "new", "option_d": "create", "correct_answer": "C", "type": "java", "level": "beginner"}}, {"model": "testapp.py_question", "pk": 69, "fields": {"question_text": "Which of the following is not a primitive data type in Java?", "option_a": "int", "option_b": "String", "option_c": "char", "option_d": "float", "correct_answer": "B", "type": "java", "level": "beginner"}}, {"model": "testapp.py_question", "pk": 70, "fields": {"question_text": "Which loop checks the condition after executing the loop body?", "option_a": "for", "option_b": "while", "option_c": "do-while", "option_d": "foreach", "correct_answer": "C", "type": "java", "level": "beginner"}}, {"model": "testapp.py_question", "pk": 71, "fields": {"question_text": "Which access modifier makes a member visible to all classes?", "option_a": "private", "option_b": "protected", "option_c": "default", "option_d": "public", "correct_answer": "D", "type": "java", "level": "beginner"}}, {"model": "testapp.py_question", "pk": 72, "fields": {"question_text": "Which operator is used for logical AND in Java?", "option_a": "&", "option_b": "&&", "option_c": "||", "option_d": "|", "correct_answer": "B", "type": "java", "level": "beginner"}}, {"model": "testapp.py_question", "pk": 73, "fields": {"question_text": "How do you declare a constant in Java?", "option_a": "const int a = 5;", "option_b": "final int a = 5;", "option_c": "int constant a = 5;", "option_d": "constant int a = 5;", "correct_answer": "B", "type": "java", "level": "beginner"}}, {"model": "testapp.py_question", "pk": 74, "fields": {"question_text": "Which method is used to print text in Java?", "option_a": "echo()", "option_b": "write()", "option_c": "print()", "option_d": "System.out.print()", "correct_answer": "D", "type": "java", "level": "beginner"}}, {"model": "testapp.py_question", "pk": 75, "fields": {"question_text": "What is the output type of System.out.println(5 + 3)?", "option_a": "String", "option_b": "int", "option_c": "char", "option_d": "boolean", "correct_answer": "B", "type": "java", "level": "beginner"}}, {"model": "testapp.py_question", "pk": 76, "fields": {"question_text": "Which of the following is used to handle exceptions?", "option_a": "try-catch", "option_b": "do-while", "option_c": "if-else", "option_d": "switch", "correct_answer": "A", "type": "java", "level": "beginner"}}, {"model": "testapp.py_question", "pk": 77, "fields": {"question_text": "Which keyword is used to return a value from a method?", "option_a": "yield", "option_b": "return", "option_c": "break", "option_d": "exit", "correct_answer": "B", "type": "java", "level": "beginner"}}, {"model": "testapp.py_question", "pk": 78, "fields": {"question_text": "Which of the following denotes an array in Java?", "option_a": "int a()", "option_b": "int a{}", "option_c": "int a[]", "option_d": "int[] a()", "correct_answer": "C", "type": "java", "level": "beginner"}}, {"model": "testapp.py_question", "pk": 79, "fields": {"question_text": "Which function converts a string to an integer?", "option_a": "parseInt()", "option_b": "toInt()", "option_c": "convert()", "option_d": "intValue()", "correct_answer": "A", "type": "java", "level": "beginner"}}, {"model": "testapp.py_question", "pk": 80, "fields": {"question_text": "Which company developed Java?", "option_a": "Apple", "option_b": "Microsoft", "option_c": "Sun Microsystems", "option_d": "IBM", "correct_answer": "C", "type": "java", "level": "beginner"}}, {"model": "testapp.py_question", "pk": 81, "fields": {"question_text": "Which collection class allows duplicate elements and maintains insertion order?", "option_a": "HashSet", "option_b": "TreeSet", "option_c": "ArrayList", "option_d": "LinkedHashSet", "correct_answer": "C", "type": "java", "level": "intermediate"}}, {"model": "testapp.py_question", "pk": 82, "fields": {"question_text": "What does the 'super' keyword do in Java?", "option_a": "Creates a subclass", "option_b": "Calls the parent class constructor or method", "option_c": "Initializes an object", "option_d": "Declares an interface", "correct_answer": "B", "type": "java", "level": "intermediate"}}, {"model": "testapp.py_question", "pk": 83, "fields": {"question_text": "Which interface must be implemented to create a thread?", "option_a": "Runnable", "option_b": "Callable", "option_c": "Threadable", "option_d": "Executable", "correct_answer": "A", "type": "java", "level": "intermediate"}}, {"model": "testapp.py_question", "pk": 84, "fields": {"question_text": "What is method overloading?", "option_a": "Changing return type of method", "option_b": "Same method name with different parameters", "option_c": "Calling superclass method", "option_d": "Using two methods in one class", "correct_answer": "B", "type": "java", "level": "intermediate"}}, {"model": "testapp.py_question", "pk": 85, "fields": {"question_text": "Which keyword prevents method overriding?", "option_a": "static", "option_b": "super", "option_c": "final", "option_d": "abstract", "correct_answer": "C", "type": "java", "level": "intermediate"}}, {"model": "testapp.py_question", "pk": 86, "fields": {"question_text": "What is the output type of 10 / 3 in Java?", "option_a": "float", "option_b": "double", "option_c": "int", "option_d": "long", "correct_answer": "C", "type": "java", "level": "intermediate"}}, {"model": "testapp.py_question", "pk": 87, "fields": {"question_text": "Which class is used to read input from the console?", "option_a": "Scanner", "option_b": "InputReader", "option_c": "BufferedInput", "option_d": "ConsoleReader", "correct_answer": "A", "type": "java", "level": "intermediate"}}, {"model": "testapp.py_question", "pk": 88, "fields": {"question_text": "What is a checked exception?", "option_a": "Exceptions not checked by compiler", "option_b": "Compile-time exceptions", "option_c": "Run-time exceptions", "option_d": "All exceptions", "correct_answer": "B", "type": "java", "level": "intermediate"}}, {"model": "testapp.py_question", "pk": 89, "fields": {"question_text": "Which of these keywords is used to implement an interface?", "option_a": "extends", "option_b": "interface", "option_c": "implements", "option_d": "inherits", "correct_answer": "C", "type": "java", "level": "intermediate"}}, {"model": "testapp.py_question", "pk": 90, "fields": {"question_text": "What is the result of '5' + 2 in Java?", "option_a": "7", "option_b": "Error", "option_c": "52", "option_d": "String", "correct_answer": "C", "type": "java", "level": "intermediate"}}, {"model": "testapp.py_question", "pk": 91, "fields": {"question_text": "Which collection ensures uniqueness but not sorted order?", "option_a": "ArrayList", "option_b": "HashSet", "option_c": "TreeSet", "option_d": "LinkedList", "correct_answer": "B", "type": "java", "level": "intermediate"}}, {"model": "testapp.py_question", "pk": 92, "fields": {"question_text": "What is the purpose of a constructor?", "option_a": "To destroy an object", "option_b": "To initialize objects", "option_c": "To inherit behavior", "option_d": "To override methods", "correct_answer": "B", "type": "java", "level": "intermediate"}}, {"model": "testapp.py_question", "pk": 93, "fields": {"question_text": "Which access modifier is more restrictive than protected?", "option_a": "default", "option_b": "public", "option_c": "private", "option_d": "static", "correct_answer": "C", "type": "java", "level": "intermediate"}}, {"model": "testapp.py_question", "pk": 94, "fields": {"question_text": "What is the output of Boolean.parseBoolean(\"TrUe\")?", "option_a": "true", "option_b": "false", "option_c": "error", "option_d": "null", "correct_answer": "A", "type": "java", "level": "intermediate"}}, {"model": "testapp.py_question", "pk": 95, "fields": {"question_text": "What will happen if a class does not have a constructor?", "option_a": "Compilation error", "option_b": "Object can't be created", "option_c": "Compiler provides a default constructor", "option_d": "Runtime error", "correct_answer": "C", "type": "java", "level": "intermediate"}}, {"model": "testapp.py_question", "pk": 96, "fields": {"question_text": "Which of the following types is used to store large decimal values?", "option_a": "int", "option_b": "double", "option_c": "float", "option_d": "long", "correct_answer": "B", "type": "java", "level": "intermediate"}}, {"model": "testapp.py_question", "pk": 97, "fields": {"question_text": "Which method compares string values in Java?", "option_a": "compare()", "option_b": "equals()", "option_c": "==", "option_d": "compareTo()", "correct_answer": "B", "type": "java", "level": "intermediate"}}, {"model": "testapp.py_question", "pk": 98, "fields": {"question_text": "Which operator is used to test object type?", "option_a": "==", "option_b": "instanceof", "option_c": "typeof", "option_d": "as", "correct_answer": "B", "type": "java", "level": "intermediate"}}, {"model": "testapp.py_question", "pk": 99, "fields": {"question_text": "Which concept allows multiple methods with the same name?", "option_a": "Abstraction", "option_b": "Encapsulation", "option_c": "Overloading", "option_d": "Inheritance", "correct_answer": "C", "type": "java", "level": "intermediate"}}, {"model": "testapp.py_question", "pk": 100, "fields": {"question_text": "What does the keyword 'static' mean in Java?", "option_a": "The method can only be accessed in static blocks", "option_b": "The method belongs to the class, not objects", "option_c": "The method cannot be called", "option_d": "The method can be overridden", "correct_answer": "B", "type": "java", "level": "intermediate"}}, {"model": "testapp.py_question", "pk": 101, "fields": {"question_text": "What is the purpose of the 'volatile' keyword in Java?", "option_a": "To synchronize threads", "option_b": "To mark variables as constant", "option_c": "To ensure visibility of changes across threads", "option_d": "To protect against deadlocks", "correct_answer": "C", "type": "java", "level": "expert"}}, {"model": "testapp.py_question", "pk": 102, "fields": {"question_text": "Which of the following is NOT a feature of Java Memory Model (JMM)?", "option_a": "Atomicity", "option_b": "Visibility", "option_c": "Ordering", "option_d": "Inheritance", "correct_answer": "D", "type": "java", "level": "expert"}}, {"model": "testapp.py_question", "pk": 103, "fields": {"question_text": "How is thread safety achieved in Java?", "option_a": "Using 'synchronized'", "option_b": "Using 'static'", "option_c": "Using 'volatile'", "option_d": "Using 'private'", "correct_answer": "A", "type": "java", "level": "expert"}}, {"model": "testapp.py_question", "pk": 104, "fields": {"question_text": "What does the finalize() method do?", "option_a": "Automatically optimizes memory", "option_b": "Used before compilation", "option_c": "Invoked by GC before object destruction", "option_d": "Used to define constructors", "correct_answer": "C", "type": "java", "level": "expert"}}, {"model": "testapp.py_question", "pk": 105, "fields": {"question_text": "What is the default priority of a thread?", "option_a": "0", "option_b": "1", "option_c": "5", "option_d": "10", "correct_answer": "C", "type": "java", "level": "expert"}}, {"model": "testapp.py_question", "pk": 106, "fields": {"question_text": "Which class is used for high-performance atomic operations?", "option_a": "AtomicInteger", "option_b": "ConcurrentInteger", "option_c": "ThreadSafeInt", "option_d": "VolatileInt", "correct_answer": "A", "type": "java", "level": "expert"}}, {"model": "testapp.py_question", "pk": 107, "fields": {"question_text": "Which Java feature allows one class to inherit from multiple interfaces?", "option_a": "Abstraction", "option_b": "Polymorphism", "option_c": "Interface inheritance", "option_d": "Multiple class inheritance", "correct_answer": "C", "type": "java", "level": "expert"}}, {"model": "testapp.py_question", "pk": 108, "fields": {"question_text": "What is the output of new Integer(127) == new Integer(127)?", "option_a": "true", "option_b": "false", "option_c": "error", "option_d": "depends on JVM", "correct_answer": "B", "type": "java", "level": "expert"}}, {"model": "testapp.py_question", "pk": 109, "fields": {"question_text": "Which collection is best for constant-time access by key?", "option_a": "TreeMap", "option_b": "LinkedHashMap", "option_c": "HashMap", "option_d": "ArrayList", "correct_answer": "C", "type": "java", "level": "expert"}}, {"model": "testapp.py_question", "pk": 110, "fields": {"question_text": "How can deadlocks be avoided in Java?", "option_a": "Using static methods", "option_b": "Avoiding nested locks", "option_c": "Using String pool", "option_d": "Using multiple threads", "correct_answer": "B", "type": "java", "level": "expert"}}, {"model": "testapp.py_question", "pk": 111, "fields": {"question_text": "What is the time complexity of accessing an element in a LinkedList?", "option_a": "O(1)", "option_b": "O(log n)", "option_c": "O(n)", "option_d": "O(n^2)", "correct_answer": "C", "type": "java", "level": "expert"}}, {"model": "testapp.py_question", "pk": 112, "fields": {"question_text": "Which of these is true about Java Streams?", "option_a": "They support mutable shared state", "option_b": "They can only run sequentially", "option_c": "They support parallel execution", "option_d": "They require threads to be managed manually", "correct_answer": "C", "type": "java", "level": "expert"}}, {"model": "testapp.py_question", "pk": 113, "fields": {"question_text": "Which design pattern does Java's I/O library follow?", "option_a": "Observer", "option_b": "Decorator", "option_c": "Factory", "option_d": "Singleton", "correct_answer": "B", "type": "java", "level": "expert"}}, {"model": "testapp.py_question", "pk": 114, "fields": {"question_text": "What does Java's Fork/Join framework help with?", "option_a": "Event handling", "option_b": "Parallelism using recursion", "option_c": "Socket programming", "option_d": "GUI design", "correct_answer": "B", "type": "java", "level": "expert"}}, {"model": "testapp.py_question", "pk": 115, "fields": {"question_text": "What is the main use of Optional class in Java?", "option_a": "Handle database queries", "option_b": "Avoid null pointer exceptions", "option_c": "Thread pooling", "option_d": "Type casting", "correct_answer": "B", "type": "java", "level": "expert"}}, {"model": "testapp.py_question", "pk": 116, "fields": {"question_text": "Which annotation helps with dependency injection in Spring?", "option_a": "@Autowired", "option_b": "@Override", "option_c": "@Static", "option_d": "@Init", "correct_answer": "A", "type": "java", "level": "expert"}}, {"model": "testapp.py_question", "pk": 117, "fields": {"question_text": "Which keyword restricts inheritance of a class?", "option_a": "final", "option_b": "static", "option_c": "private", "option_d": "const", "correct_answer": "A", "type": "java", "level": "expert"}}, {"model": "testapp.py_question", "pk": 118, "fields": {"question_text": "How does garbage collection work in Java?", "option_a": "Reference counting", "option_b": "Manual trigger only", "option_c": "Mark and sweep, generational", "option_d": "Heap overflow based", "correct_answer": "C", "type": "java", "level": "expert"}}, {"model": "testapp.py_question", "pk": 119, "fields": {"question_text": "What happens if you override equals() but not hashCode()?", "option_a": "No effect", "option_b": "Compilation error", "option_c": "Breaks contract for hash-based collections", "option_d": "Improves performance", "correct_answer": "C", "type": "java", "level": "expert"}}, {"model": "testapp.py_question", "pk": 120, "fields": {"question_text": "What is the primary benefit of immutability?", "option_a": "Ease of inheritance", "option_b": "Thread safety", "option_c": "Serialization", "option_d": "Faster I/O", "correct_answer": "B", "type": "java", "level": "expert"}}, {"model": "testapp.py_question", "pk": 121, "fields": {"question_text": "Which language is used to structure the content of web pages?", "option_a": "HTML", "option_b": "CSS", "option_c": "JavaScript", "option_d": "Python", "correct_answer": "A", "type": "frontend", "level": "beginner"}}, {"model": "testapp.py_question", "pk": 122, "fields": {"question_text": "Which HTML tag is used to create a hyperlink?", "option_a": "<link>", "option_b": "<a>", "option_c": "<href>", "option_d": "<hyper>", "correct_answer": "B", "type": "frontend", "level": "beginner"}}, {"model": "testapp.py_question", "pk": 123, "fields": {"question_text": "Which property is used in CSS to change text color?", "option_a": "font-color", "option_b": "text-color", "option_c": "color", "option_d": "text-style", "correct_answer": "C", "type": "frontend", "level": "beginner"}}, {"model": "testapp.py_question", "pk": 124, "fields": {"question_text": "Which of the following is a JavaScript data type?", "option_a": "integer", "option_b": "float", "option_c": "character", "option_d": "boolean", "correct_answer": "D", "type": "frontend", "level": "beginner"}}, {"model": "testapp.py_question", "pk": 125, "fields": {"question_text": "What does CSS stand for?", "option_a": "Cascading Style Syntax", "option_b": "Cascading Style Sheets", "option_c": "Creative Style Sheets", "option_d": "Color Style Syntax", "correct_answer": "B", "type": "frontend", "level": "beginner"}}, {"model": "testapp.py_question", "pk": 126, "fields": {"question_text": "What HTML tag is used to define a table row?", "option_a": "<tr>", "option_b": "<td>", "option_c": "<th>", "option_d": "<table>", "correct_answer": "A", "type": "frontend", "level": "beginner"}}, {"model": "testapp.py_question", "pk": 127, "fields": {"question_text": "Which attribute is used to provide alternate text for an image in HTML?", "option_a": "src", "option_b": "alt", "option_c": "title", "option_d": "href", "correct_answer": "B", "type": "frontend", "level": "beginner"}}, {"model": "testapp.py_question", "pk": 128, "fields": {"question_text": "Which of the following can change the background color in CSS?", "option_a": "bgcolor", "option_b": "background", "option_c": "color", "option_d": "background-color", "correct_answer": "D", "type": "frontend", "level": "beginner"}}, {"model": "testapp.py_question", "pk": 129, "fields": {"question_text": "How do you write a JavaScript comment?", "option_a": "// comment", "option_b": "/* comment */", "option_c": "# comment", "option_d": "<!-- comment -->", "correct_answer": "A", "type": "frontend", "level": "beginner"}}, {"model": "testapp.py_question", "pk": 130, "fields": {"question_text": "What symbol is used to select an ID in CSS?", "option_a": "#", "option_b": ".", "option_c": "*", "option_d": "!", "correct_answer": "A", "type": "frontend", "level": "beginner"}}, {"model": "testapp.py_question", "pk": 131, "fields": {"question_text": "What does the `<head>` tag typically contain?", "option_a": "Page content", "option_b": "Styles and metadata", "option_c": "Visible text", "option_d": "Scripts only", "correct_answer": "B", "type": "frontend", "level": "beginner"}}, {"model": "testapp.py_question", "pk": 132, "fields": {"question_text": "What is the correct way to include an external CSS file?", "option_a": "<link rel='stylesheet' href='style.css'>", "option_b": "<style src='style.css'>", "option_c": "<css src='style.css'>", "option_d": "<link src='style.css'>", "correct_answer": "A", "type": "frontend", "level": "beginner"}}, {"model": "testapp.py_question", "pk": 133, "fields": {"question_text": "How can we make a list in HTML?", "option_a": "<ul>", "option_b": "<list>", "option_c": "<ol>", "option_d": "Both A and C", "correct_answer": "D", "type": "frontend", "level": "beginner"}}, {"model": "testapp.py_question", "pk": 134, "fields": {"question_text": "Which of the following is used to create a checkbox in HTML?", "option_a": "<input type='box'>", "option_b": "<input type='check'>", "option_c": "<input type='checkbox'>", "option_d": "<checkbox>", "correct_answer": "C", "type": "frontend", "level": "beginner"}}, {"model": "testapp.py_question", "pk": 135, "fields": {"question_text": "Which event occurs when the user clicks on an HTML element?", "option_a": "onhover", "option_b": "onchange", "option_c": "onmouseclick", "option_d": "onclick", "correct_answer": "D", "type": "frontend", "level": "beginner"}}, {"model": "testapp.py_question", "pk": 136, "fields": {"question_text": "Which tag is used to insert a line break in HTML?", "option_a": "<br>", "option_b": "<break>", "option_c": "<lb>", "option_d": "<newline>", "correct_answer": "A", "type": "frontend", "level": "beginner"}}, {"model": "testapp.py_question", "pk": 137, "fields": {"question_text": "What is the default alignment of content in a `<div>`?", "option_a": "Right", "option_b": "Left", "option_c": "Center", "option_d": "Justify", "correct_answer": "B", "type": "frontend", "level": "beginner"}}, {"model": "testapp.py_question", "pk": 138, "fields": {"question_text": "How do you insert a JavaScript file into an HTML file?", "option_a": "<script href='file.js'>", "option_b": "<script src='file.js'>", "option_c": "<js src='file.js'>", "option_d": "<script file='file.js'>", "correct_answer": "B", "type": "frontend", "level": "beginner"}}, {"model": "testapp.py_question", "pk": 139, "fields": {"question_text": "Which HTML tag is used to define an unordered list?", "option_a": "<ul>", "option_b": "<ol>", "option_c": "<list>", "option_d": "<li>", "correct_answer": "A", "type": "frontend", "level": "beginner"}}, {"model": "testapp.py_question", "pk": 140, "fields": {"question_text": "What is the default value of the position property in CSS?", "option_a": "absolute", "option_b": "relative", "option_c": "static", "option_d": "fixed", "correct_answer": "C", "type": "frontend", "level": "beginner"}}, {"model": "testapp.py_question", "pk": 141, "fields": {"question_text": "What does the 'box-sizing: border-box' property do?", "option_a": "Includes padding and border in total width/height", "option_b": "Excludes margin from box model", "option_c": "Removes padding", "option_d": "Sets default border", "correct_answer": "A", "type": "frontend", "level": "intermediate"}}, {"model": "testapp.py_question", "pk": 142, "fields": {"question_text": "Which JavaScript method is used to select an element by ID?", "option_a": "getElementByClass()", "option_b": "querySelectorAll()", "option_c": "getElementById()", "option_d": "selectElement()", "correct_answer": "C", "type": "frontend", "level": "intermediate"}}, {"model": "testapp.py_question", "pk": 143, "fields": {"question_text": "What is the z-index property in CSS used for?", "option_a": "Set font weight", "option_b": "Control element stacking", "option_c": "Set z-direction rotation", "option_d": "Set margin order", "correct_answer": "B", "type": "frontend", "level": "intermediate"}}, {"model": "testapp.py_question", "pk": 144, "fields": {"question_text": "Which HTML5 tag is used to define navigation links?", "option_a": "<nav>", "option_b": "<header>", "option_c": "<footer>", "option_d": "<links>", "correct_answer": "A", "type": "frontend", "level": "intermediate"}}, {"model": "testapp.py_question", "pk": 145, "fields": {"question_text": "How do you make a responsive layout in CSS?", "option_a": "Using px units", "option_b": "Using !important", "option_c": "Using flexbox/grid and media queries", "option_d": "Using tables", "correct_answer": "C", "type": "frontend", "level": "intermediate"}}, {"model": "testapp.py_question", "pk": 146, "fields": {"question_text": "Which attribute is used in HTML5 for client-side form validation?", "option_a": "check", "option_b": "validate", "option_c": "required", "option_d": "verify", "correct_answer": "C", "type": "frontend", "level": "intermediate"}}, {"model": "testapp.py_question", "pk": 147, "fields": {"question_text": "What is event bubbling in JavaScript?", "option_a": "Top-down event propagation", "option_b": "Bottom-up event propagation", "option_c": "Multiple event handlers", "option_d": "Event queuing", "correct_answer": "B", "type": "frontend", "level": "intermediate"}}, {"model": "testapp.py_question", "pk": 148, "fields": {"question_text": "Which pseudo-class targets every even-numbered element?", "option_a": ":even", "option_b": ":nth-child(even)", "option_c": "::even-child", "option_d": ":eq(even)", "correct_answer": "B", "type": "frontend", "level": "intermediate"}}, {"model": "testapp.py_question", "pk": 149, "fields": {"question_text": "What is the purpose of `flex-grow` in CSS Flexbox?", "option_a": "Align item vertically", "option_b": "Set item height", "option_c": "Allow item to grow relative to others", "option_d": "Control margin", "correct_answer": "C", "type": "frontend", "level": "intermediate"}}, {"model": "testapp.py_question", "pk": 150, "fields": {"question_text": "What does `preventDefault()` do in JavaScript?", "option_a": "Stops default browser action", "option_b": "Prevents errors", "option_c": "Stops event loop", "option_d": "Stops rendering", "correct_answer": "A", "type": "frontend", "level": "intermediate"}}, {"model": "testapp.py_question", "pk": 151, "fields": {"question_text": "Which of the following tags is self-closing in HTML?", "option_a": "<div>", "option_b": "<span>", "option_c": "<img>", "option_d": "<p>", "correct_answer": "C", "type": "frontend", "level": "intermediate"}}, {"model": "testapp.py_question", "pk": 152, "fields": {"question_text": "What does the `defer` attribute in `<script>` tag do?", "option_a": "Delays script execution until user scrolls", "option_b": "Executes script immediately", "option_c": "Executes after HTML parsing", "option_d": "Blocks DOM rendering", "correct_answer": "C", "type": "frontend", "level": "intermediate"}}, {"model": "testapp.py_question", "pk": 153, "fields": {"question_text": "Which CSS function is used to apply transparency?", "option_a": "rgb()", "option_b": "hex()", "option_c": "opacity()", "option_d": "rgba()", "correct_answer": "D", "type": "frontend", "level": "intermediate"}}, {"model": "testapp.py_question", "pk": 154, "fields": {"question_text": "What is the default display property of a `<span>` element?", "option_a": "block", "option_b": "inline", "option_c": "inline-block", "option_d": "flex", "correct_answer": "B", "type": "frontend", "level": "intermediate"}}, {"model": "testapp.py_question", "pk": 155, "fields": {"question_text": "Which of the following is true about async attribute in script tags?", "option_a": "Blocks parsing", "option_b": "Executes immediately before DOM", "option_c": "Script executes independently", "option_d": "Ignores caching", "correct_answer": "C", "type": "frontend", "level": "intermediate"}}, {"model": "testapp.py_question", "pk": 156, "fields": {"question_text": "Which JavaScript keyword is used to define constants?", "option_a": "var", "option_b": "let", "option_c": "const", "option_d": "static", "correct_answer": "C", "type": "frontend", "level": "intermediate"}}, {"model": "testapp.py_question", "pk": 157, "fields": {"question_text": "Which property aligns flex items vertically?", "option_a": "justify-content", "option_b": "align-items", "option_c": "vertical-align", "option_d": "text-align", "correct_answer": "B", "type": "frontend", "level": "intermediate"}}, {"model": "testapp.py_question", "pk": 158, "fields": {"question_text": "What will `typeof null` return in JavaScript?", "option_a": "null", "option_b": "object", "option_c": "undefined", "option_d": "string", "correct_answer": "B", "type": "frontend", "level": "intermediate"}}, {"model": "testapp.py_question", "pk": 159, "fields": {"question_text": "What does `viewport` meta tag control?", "option_a": "Zoom behavior", "option_b": "Page title", "option_c": "Cookie scope", "option_d": "Theme color", "correct_answer": "A", "type": "frontend", "level": "intermediate"}}, {"model": "testapp.py_question", "pk": 160, "fields": {"question_text": "What is the default method for form submission in HTML?", "option_a": "POST", "option_b": "GET", "option_c": "PUT", "option_d": "SUBMIT", "correct_answer": "B", "type": "frontend", "level": "intermediate"}}, {"model": "testapp.py_question", "pk": 161, "fields": {"question_text": "What is the main purpose of the Shadow DOM?", "option_a": "Create shadow effects", "option_b": "Style isolation and DOM encapsulation", "option_c": "Enable async rendering", "option_d": "Improve SEO", "correct_answer": "B", "type": "frontend", "level": "expert"}}, {"model": "testapp.py_question", "pk": 162, "fields": {"question_text": "What is the difference between '==' and '===' in JavaScript?", "option_a": "No difference", "option_b": "'===' checks for strict equality", "option_c": "'==' checks for reference", "option_d": "'===' is used for objects only", "correct_answer": "B", "type": "frontend", "level": "expert"}}, {"model": "testapp.py_question", "pk": 163, "fields": {"question_text": "Which HTTP header is used in CORS for allowed origins?", "option_a": "Access-Control-Allow-Origin", "option_b": "Content-Type", "option_c": "Origin", "option_d": "Allow-Origin", "correct_answer": "A", "type": "frontend", "level": "expert"}}, {"model": "testapp.py_question", "pk": 164, "fields": {"question_text": "What is throttling in JavaScript?", "option_a": "Blocking events", "option_b": "Limiting function execution rate", "option_c": "Disabling JavaScript", "option_d": "Restricting input", "correct_answer": "B", "type": "frontend", "level": "expert"}}, {"model": "testapp.py_question", "pk": 165, "fields": {"question_text": "What is the main purpose of a Service Worker?", "option_a": "Update DOM", "option_b": "Handle form validation", "option_c": "Enable offline support and caching", "option_d": "Enable SSR", "correct_answer": "C", "type": "frontend", "level": "expert"}}, {"model": "testapp.py_question", "pk": 166, "fields": {"question_text": "What is the Time Complexity of Virtual DOM diffing?", "option_a": "O(1)", "option_b": "O(n)", "option_c": "O(n^2)", "option_d": "O(log n)", "correct_answer": "B", "type": "frontend", "level": "expert"}}, {"model": "testapp.py_question", "pk": 167, "fields": {"question_text": "What does `Object.freeze()` do?", "option_a": "Makes properties immutable", "option_b": "Deletes object", "option_c": "Prevents rendering", "option_d": "Freezes screen", "correct_answer": "A", "type": "frontend", "level": "expert"}}, {"model": "testapp.py_question", "pk": 168, "fields": {"question_text": "How can you optimize a React app performance?", "option_a": "Avoid using hooks", "option_b": "Use inline styles", "option_c": "Use memoization and keys", "option_d": "Ignore re-renders", "correct_answer": "C", "type": "frontend", "level": "expert"}}, {"model": "testapp.py_question", "pk": 169, "fields": {"question_text": "What does the 'ref' attribute in React allow?", "option_a": "Inline styling", "option_b": "Direct DOM access", "option_c": "Routing", "option_d": "State sharing", "correct_answer": "B", "type": "frontend", "level": "expert"}}, {"model": "testapp.py_question", "pk": 170, "fields": {"question_text": "Which of the following tools is used for bundling JS modules?", "option_a": "React", "option_b": "Webpack", "option_c": "SASS", "option_d": "npm", "correct_answer": "B", "type": "frontend", "level": "expert"}}, {"model": "testapp.py_question", "pk": 171, "fields": {"question_text": "What is hydration in SSR frameworks?", "option_a": "Injecting client scripts", "option_b": "Adding styles to DOM", "option_c": "Attaching event listeners to SSR DOM", "option_d": "Cleaning DOM", "correct_answer": "C", "type": "frontend", "level": "expert"}}, {"model": "testapp.py_question", "pk": 172, "fields": {"question_text": "Which of these helps prevent Cross-Site Scripting (XSS)?", "option_a": "JSON.stringify", "option_b": "innerHTML", "option_c": "Content Security Policy", "option_d": "GET requests", "correct_answer": "C", "type": "frontend", "level": "expert"}}, {"model": "testapp.py_question", "pk": 173, "fields": {"question_text": "What is the role of ARIA in accessibility?", "option_a": "Improves design", "option_b": "Adds security", "option_c": "Provides semantic accessibility hints", "option_d": "Renders audio", "correct_answer": "C", "type": "frontend", "level": "expert"}}, {"model": "testapp.py_question", "pk": 174, "fields": {"question_text": "What is a closure in JavaScript?", "option_a": "A block scope", "option_b": "A loop with functions", "option_c": "A function with preserved lexical scope", "option_d": "A JavaScript bug", "correct_answer": "C", "type": "frontend", "level": "expert"}}, {"model": "testapp.py_question", "pk": 175, "fields": {"question_text": "Which JavaScript engine is used in Google Chrome?", "option_a": "SpiderMonkey", "option_b": "V8", "option_c": "Chakra", "option_d": "Nashorn", "correct_answer": "B", "type": "frontend", "level": "expert"}}, {"model": "testapp.py_question", "pk": 176, "fields": {"question_text": "How do you make a CSS animation repeat infinitely?", "option_a": "animation-cycle: loop;", "option_b": "repeat: infinite;", "option_c": "animation-iteration-count: infinite;", "option_d": "loop: true;", "correct_answer": "C", "type": "frontend", "level": "expert"}}, {"model": "testapp.py_question", "pk": 177, "fields": {"question_text": "What?s the difference between LocalStorage and SessionStorage?", "option_a": "Different syntax", "option_b": "SessionStorage persists across tabs", "option_c": "LocalStorage persists longer", "option_d": "They are same", "correct_answer": "C", "type": "frontend", "level": "expert"}}, {"model": "testapp.py_question", "pk": 178, "fields": {"question_text": "What is the output of `[...'abc']` in JavaScript?", "option_a": "['a', 'b', 'c']", "option_b": "'abc'", "option_c": "[abc]", "option_d": "Error", "correct_answer": "A", "type": "frontend", "level": "expert"}}, {"model": "testapp.py_question", "pk": 179, "fields": {"question_text": "Which tool is best for linting JavaScript code?", "option_a": "SASS", "option_b": "TypeScript", "option_c": "Babel", "option_d": "ESLint", "correct_answer": "D", "type": "frontend", "level": "expert"}}, {"model": "testapp.py_question", "pk": 180, "fields": {"question_text": "What is the default scope of variables declared with `let`?", "option_a": "Function", "option_b": "Global", "option_c": "Block", "option_d": "Module", "correct_answer": "C", "type": "frontend", "level": "expert"}}]